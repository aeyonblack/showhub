plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

/**
 * Used to access hidden api keys
 * and for workflow management
 */
def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("./local.properties")))

android {
    compileSdk buildConfig.compileSdk

    defaultConfig {
        applicationId "com.tanya.showhub"
        minSdk buildConfig.minSdk
        targetSdk buildConfig.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "TMDB_API_KEY", localProperties['TMDB_API_KEY'])
        buildConfigField("String", "TRAKT_CLIENT_ID", localProperties['TRAKT_CLIENT_ID'])
        buildConfigField("String", "TRAKT_CLIENT_SECRET", localProperties['TRAKT_CLIENT_SECRET'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    lintOptions {
        checkReleaseBuilds false
        ignoreTestSources true
        abortOnError true
        checkDependencies true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                useJUnitPlatform()
            }
        }
    }
}

dependencies {

    implementation project(":libs:base")
    implementation project(":libs:base-android")
    implementation project(":libs:data")
    implementation project(":libs:data-android")
    implementation project(":libs:domain")
    implementation project(":libs:trakt")
    implementation project(":libs:trakt-auth")
    implementation project(":libs:tmdb")
    implementation project(":libs:tasks")
    implementation project(":libs:common-ui-view")
    implementation project(":libs:common-ui-compose")

    implementation project(":features:ui-home")
    implementation project(":features:ui-showdetails")

    implementation(libs.androidx.core)
    implementation(libs.androidx.lifecycle.runtime)
    implementation(libs.androidx.activity.compose)

    implementation(libs.bundles.compose)

    implementation(libs.accompanist.insets)
    implementation(libs.accompanist.navigation.material)

    implementation(libs.hilt.library)
    implementation(libs.androidx.hilt.compose)
    kapt(libs.hilt.compiler)

    implementation(libs.threeTenAbp)

    implementation(libs.androidx.startup.runtime)

    implementation(libs.androidx.hilt.work)
    kapt(libs.androidx.hilt.compiler)

    testImplementation(libs.junit.jupiter)
    androidTestImplementation(libs.androidx.test.junit)
    androidTestImplementation(libs.espresso.core)
    androidTestImplementation(libs.compose.ui.test)

    debugImplementation(libs.compose.ui.ui.tooling)

    testRuntimeOnly(libs.junit.jupiter.engine)
}