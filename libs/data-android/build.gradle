plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

android {
    compileSdk buildConfig.compileSdk

    defaultConfig {
        minSdk buildConfig.minSdk
        targetSdk buildConfig.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    testOptions {
        unitTests {
            includeAndroidResources = true

            all {
                minHeapSize = "64m"
                maxHeapSize = "128m"
            }
        }
    }
}

dependencies {
    api project(":libs:base")
    implementation project(":libs:base-android")
    implementation project(":libs:data")

    api(libs.androidx.room.runtime)
    implementation(libs.androidx.room.ktx)
    implementation(libs.androidx.room.paging)
    kapt(libs.androidx.room.compiler)

    implementation(libs.androidx.paging.runtime)

    implementation(libs.hilt.library)
    kapt(libs.hilt.compiler)

    testImplementation(libs.junit)
    //testImplementation(libs.junit.jupiter)
    testImplementation(libs.robolectric)
    testImplementation(libs.mockK)
    testImplementation(libs.assertj)
    //testRuntimeOnly(libs.junit.jupiter.engine)

    testImplementation(libs.androidx.archCoreTesting)
    testImplementation(libs.androidx.test.core)
    testImplementation(libs.androidx.test.junit)
    testImplementation(libs.androidx.room.testing)
    testImplementation(libs.truth)
    testImplementation(libs.kotlin.coroutines.test)
    testImplementation(libs.hilt.testing)

    kaptTest(libs.androidx.room.compiler)
    kaptTest(libs.hilt.compiler)

    testImplementation("org.threeten:threetenbp:${libs.versions.threetenbp.get()}")
    testImplementation(libs.kotlin.coroutines.android)
}